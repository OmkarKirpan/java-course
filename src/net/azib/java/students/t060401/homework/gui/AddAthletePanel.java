/*
 * AddAthletePanel.java
 *
 * Created on 02 June 2007, 21:37
 */

package net.azib.java.students.t060401.homework.gui;

import net.azib.java.students.t060401.homework.decathlon.Athlete;
import net.azib.java.students.t060401.homework.decathlon.DecathlonInfoVector;

import java.util.Locale;

import javax.swing.GroupLayout;
import javax.swing.LayoutStyle;

/**
 * Panel with components for inserting and validating athlete's data.
 *
 * @author t060401
 */
public class AddAthletePanel extends javax.swing.JPanel {
    
	/** serialVersionUID */
	private static final long serialVersionUID = 1L;
	
	private DecathlonInfoVector decathlonVector;
	private Athlete athlete;
	
    /** Creates new form AddAthletePanel */
    public AddAthletePanel(DecathlonInfoVector decathlonVector) {
    	this.decathlonVector = decathlonVector;
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
		athlete = new Athlete();
		
        infoLabel = new javax.swing.JLabel();
        addAthleteButton = new javax.swing.JButton();
        nameField = new javax.swing.JTextField();
        birthDateField = new javax.swing.JTextField();
        sprint100mField = new javax.swing.JTextField();
        longJumpField = new javax.swing.JTextField();
        shotPutField = new javax.swing.JTextField();
        highJumpField = new javax.swing.JTextField();
        sprint400mField = new javax.swing.JTextField();
        hurdles110mField = new javax.swing.JTextField();
        discusThrowField = new javax.swing.JTextField();
        poleVaultField = new javax.swing.JTextField();
        javelinThrowField = new javax.swing.JTextField();
        race1500mField = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        birthDateLabel = new javax.swing.JLabel();
        countryLabel = new javax.swing.JLabel();
        sprint100mLabel = new javax.swing.JLabel();
        longJumpLabel = new javax.swing.JLabel();
        shotPutLabel = new javax.swing.JLabel();
        highJumpLabel = new javax.swing.JLabel();
        sprint400mLabel = new javax.swing.JLabel();
        hurdles110mLabel = new javax.swing.JLabel();
        discusThrowLabel = new javax.swing.JLabel();
        poleVaultLabel = new javax.swing.JLabel();
        javelinThrowLabel = new javax.swing.JLabel();
        race1500mLabel = new javax.swing.JLabel();
        nameWarningLabel = new javax.swing.JLabel();
        birthDateWarningLabel = new javax.swing.JLabel();
        countryWarningLabel = new javax.swing.JLabel();
        sprint100mWarningLabel = new javax.swing.JLabel();
        longJumpWarningLabel = new javax.swing.JLabel();
        shotPutWarningLabel = new javax.swing.JLabel();
        highJumpWarningLabel = new javax.swing.JLabel();
        sprint400mWarningLabel = new javax.swing.JLabel();
        hurdles110mWarningLabel = new javax.swing.JLabel();
        discusThrowWarningLabel = new javax.swing.JLabel();
        poleVaultWarningLabel = new javax.swing.JLabel();
        javelinThrowWarningLabel = new javax.swing.JLabel();
        race1500mWarningLabel = new javax.swing.JLabel();
        resetButton = new javax.swing.JButton();
        countryCombo = new javax.swing.JComboBox(Locale.getISOCountries());	

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        
        addAthleteButton.setText("Save athlete");
        addAthleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addAthleteButtonMouseClicked(evt);
            }
        });

        nameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameFieldFocusLost(evt);
            }
        });

        birthDateField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                birthDateFieldFocusLost(evt);
            }
        });

        sprint100mField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                sprint100mFieldFocusLost(evt);
            }
        });

        longJumpField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                longJumpFieldFocusLost(evt);
            }
        });

        shotPutField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                shotPutFieldFocusLost(evt);
            }
        });

        highJumpField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                highJumpFieldFocusLost(evt);
            }
        });

        sprint400mField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                sprint400mFieldFocusLost(evt);
            }
        });

        hurdles110mField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                hurdles110mFieldFocusLost(evt);
            }
        });

        discusThrowField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                discusThrowFieldFocusLost(evt);
            }
        });

        poleVaultField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                poleVaultFieldFocusLost(evt);
            }
        });

        javelinThrowField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                javelinThrowFieldFocusLost(evt);
            }
        });

        race1500mField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                race1500mFieldFocusLost(evt);
            }
        });

        nameLabel.setText("Name:");

        birthDateLabel.setText("Birth date:");

        countryLabel.setText("Country:");

        sprint100mLabel.setText("100 m sprint:");

        longJumpLabel.setText("Long jump:");

        shotPutLabel.setText("Shot put:");

        highJumpLabel.setText("High jump");

        sprint400mLabel.setText("400 m sprint");

        hurdles110mLabel.setText("110 m hurdles");

        discusThrowLabel.setText("Discus throw");

        poleVaultLabel.setText("Pole vault");

        javelinThrowLabel.setText("Javelin throw");

        race1500mLabel.setText("1500 m race");

        resetButton.setText("Reset");
        resetButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetButtonMouseClicked(evt);
            }
        });

        countryCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                countryComboFocusLost(evt);
            }
        });

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                		.addComponent(infoLabel, GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addComponent(race1500mLabel, GroupLayout.PREFERRED_SIZE, 108, GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                        .addComponent(poleVaultLabel, GroupLayout.PREFERRED_SIZE, 108, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(discusThrowLabel, GroupLayout.PREFERRED_SIZE, 108, GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                                .addComponent(sprint400mLabel, GroupLayout.PREFERRED_SIZE, 108, GroupLayout.PREFERRED_SIZE)
                                                .addComponent(highJumpLabel, GroupLayout.PREFERRED_SIZE, 108, GroupLayout.PREFERRED_SIZE)
                                                .addComponent(shotPutLabel, GroupLayout.PREFERRED_SIZE, 108, GroupLayout.PREFERRED_SIZE)
                                                .addComponent(longJumpLabel, GroupLayout.PREFERRED_SIZE, 108, GroupLayout.PREFERRED_SIZE)
                                                .addComponent(sprint100mLabel, GroupLayout.PREFERRED_SIZE, 108, GroupLayout.PREFERRED_SIZE)
                                                .addComponent(countryLabel, GroupLayout.PREFERRED_SIZE, 108, GroupLayout.PREFERRED_SIZE)
                                                .addComponent(nameLabel, GroupLayout.PREFERRED_SIZE, 108, GroupLayout.PREFERRED_SIZE))
                                            .addComponent(hurdles110mLabel, GroupLayout.PREFERRED_SIZE, 108, GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(javelinThrowLabel, GroupLayout.PREFERRED_SIZE, 108, GroupLayout.PREFERRED_SIZE)))
                            .addComponent(birthDateLabel, GroupLayout.PREFERRED_SIZE, 108, GroupLayout.PREFERRED_SIZE)
                            .addComponent(addAthleteButton, GroupLayout.DEFAULT_SIZE, 108, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                .addComponent(highJumpField)
                                .addComponent(sprint100mField)
                                .addComponent(birthDateField)
                                .addComponent(longJumpField)
                                .addComponent(nameField)
                                .addComponent(shotPutField)
                                .addComponent(sprint400mField)
                                .addComponent(hurdles110mField)
                                .addComponent(discusThrowField)
                                .addComponent(poleVaultField)
                                .addComponent(javelinThrowField)
                                .addComponent(race1500mField, GroupLayout.PREFERRED_SIZE, 120, GroupLayout.PREFERRED_SIZE)
                                .addComponent(resetButton, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(countryCombo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                            .addComponent(shotPutWarningLabel, GroupLayout.PREFERRED_SIZE, 172, GroupLayout.PREFERRED_SIZE)
                            .addComponent(sprint100mWarningLabel, GroupLayout.PREFERRED_SIZE, 172, GroupLayout.PREFERRED_SIZE)
                            .addComponent(birthDateWarningLabel, GroupLayout.PREFERRED_SIZE, 172, GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameWarningLabel, GroupLayout.PREFERRED_SIZE, 172, GroupLayout.PREFERRED_SIZE)
                            .addComponent(countryWarningLabel, GroupLayout.PREFERRED_SIZE, 172, GroupLayout.PREFERRED_SIZE)
                            .addComponent(longJumpWarningLabel, GroupLayout.PREFERRED_SIZE, 172, GroupLayout.PREFERRED_SIZE)
                            .addComponent(highJumpWarningLabel, GroupLayout.PREFERRED_SIZE, 172, GroupLayout.PREFERRED_SIZE)
                            .addComponent(sprint400mWarningLabel, GroupLayout.PREFERRED_SIZE, 172, GroupLayout.PREFERRED_SIZE)
                            .addComponent(hurdles110mWarningLabel, GroupLayout.PREFERRED_SIZE, 172, GroupLayout.PREFERRED_SIZE)
                            .addComponent(discusThrowWarningLabel, GroupLayout.PREFERRED_SIZE, 172, GroupLayout.PREFERRED_SIZE)
                            .addComponent(poleVaultWarningLabel, GroupLayout.PREFERRED_SIZE, 172, GroupLayout.PREFERRED_SIZE)
                            .addComponent(javelinThrowWarningLabel, GroupLayout.PREFERRED_SIZE, 172, GroupLayout.PREFERRED_SIZE)
                            .addComponent(race1500mWarningLabel, GroupLayout.PREFERRED_SIZE, 172, GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(infoLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(nameField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameWarningLabel))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(birthDateField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(birthDateWarningLabel)
                    .addComponent(birthDateLabel))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(countryLabel)
                    .addComponent(countryWarningLabel)
                    .addComponent(countryCombo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(sprint100mField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sprint100mLabel)
                    .addComponent(sprint100mWarningLabel))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(longJumpLabel)
                    .addComponent(longJumpField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(longJumpWarningLabel))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(shotPutLabel)
                    .addComponent(shotPutField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(shotPutWarningLabel))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(highJumpLabel)
                    .addComponent(highJumpField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(highJumpWarningLabel))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(sprint400mLabel)
                    .addComponent(sprint400mField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sprint400mWarningLabel))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(hurdles110mLabel)
                    .addComponent(hurdles110mField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(hurdles110mWarningLabel))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(discusThrowLabel)
                    .addComponent(discusThrowField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(discusThrowWarningLabel))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(poleVaultLabel)
                    .addComponent(poleVaultField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(poleVaultWarningLabel))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(javelinThrowLabel)
                    .addComponent(javelinThrowField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(javelinThrowWarningLabel))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(race1500mLabel)
                    .addComponent(race1500mField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(race1500mWarningLabel))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(addAthleteButton)
                    .addComponent(resetButton))
                .addContainerGap(62, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void resetButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetButtonMouseClicked
    	System.out.println("reset button clicked");
		resetGUI();
	}
	
	private void resetGUI(){
		athlete = new Athlete();
		infoLabel.setText("");
		
		nameWarningLabel.setText("");
		birthDateWarningLabel.setText("");
		sprint100mWarningLabel.setText("");
		longJumpWarningLabel.setText("");
		shotPutWarningLabel.setText("");
		highJumpWarningLabel.setText("");
		sprint400mWarningLabel.setText("");
		hurdles110mWarningLabel.setText("");
		discusThrowWarningLabel.setText("");
		poleVaultWarningLabel.setText("");
		javelinThrowWarningLabel.setText("");
		race1500mWarningLabel.setText("");
		
		nameField.setText("");
		birthDateField.setText("");
		countryCombo.setSelectedIndex(0);
		sprint100mField.setText("");
		longJumpField.setText("");
		shotPutField.setText("");
		highJumpField.setText("");
		sprint400mField.setText("");
		hurdles110mField.setText("");
		discusThrowField.setText("");
		poleVaultField.setText("");
		javelinThrowField.setText("");
		race1500mField.setText("");
	}

    private void addAthleteButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveFileButtonMouseClicked
    	System.out.println("save athlete clicked");
		if (athlete.isComplete())
		{
			this.decathlonVector.add(athlete);
			resetGUI();
			infoLabel.setText("Athlete added");
		} else {
			System.out.println("not complete");
			infoLabel.setText("Please fill all the fields properly");
		}
    }//GEN-LAST:event_saveFileButtonMouseClicked

    private void race1500mFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_race1500mFieldFocusLost
    	String race1500m = race1500mField.getText();
		System.out.println("field text "+race1500m);
		try {
			athlete.getDecathlonResults().setRace1500m(race1500m);
			race1500mWarningLabel.setText("");
		}
		catch (IllegalArgumentException e) {
			race1500mWarningLabel.setText(e.getMessage());
		}
    }//GEN-LAST:event_race1500mFieldFocusLost

    private void javelinThrowFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_javelinThrowFieldFocusLost
    	String javelinThrow = javelinThrowField.getText();
		System.out.println("field text "+javelinThrow);
		try {
			athlete.getDecathlonResults().setJavelinThrow(javelinThrow);
			javelinThrowWarningLabel.setText("");
		}
		catch (IllegalArgumentException e) {
			javelinThrowWarningLabel.setText(e.getMessage());
		}
    }//GEN-LAST:event_javelinThrowFieldFocusLost

    private void poleVaultFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_poleVaultFieldFocusLost
    	String poleVault = poleVaultField.getText();
		System.out.println("field text "+poleVault);
		try {
			athlete.getDecathlonResults().setPoleVault(poleVault);
			poleVaultWarningLabel.setText("");
		}
		catch (IllegalArgumentException e) {
			poleVaultWarningLabel.setText(e.getMessage());
		}
    }//GEN-LAST:event_poleVaultFieldFocusLost

    private void discusThrowFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_discusThrowFieldFocusLost
    	String discusThrow = discusThrowField.getText();
		System.out.println("field text "+discusThrow);
		try {
			athlete.getDecathlonResults().setDiscusThrow(discusThrow);
			discusThrowWarningLabel.setText("");
		}
		catch (IllegalArgumentException e) {
			discusThrowWarningLabel.setText(e.getMessage());
		}
    }//GEN-LAST:event_discusThrowFieldFocusLost

    private void hurdles110mFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_hurdles110mFieldFocusLost
    	String hurdles110m = hurdles110mField.getText();
		System.out.println("field text "+hurdles110m);
		try {
			athlete.getDecathlonResults().setHurdles110m(hurdles110m);
			hurdles110mWarningLabel.setText("");
		}
		catch (IllegalArgumentException e) {
			hurdles110mWarningLabel.setText(e.getMessage());
		}
    }//GEN-LAST:event_hurdles110mFieldFocusLost

    private void sprint400mFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sprint400mFieldFocusLost
    	String sprint400m = sprint400mField.getText();
		System.out.println("field text "+sprint400m);
		try {
			athlete.getDecathlonResults().setSprint400m(sprint400m);
			sprint400mWarningLabel.setText("");
		}
		catch (IllegalArgumentException e) {
			sprint400mWarningLabel.setText(e.getMessage());
		}
    }//GEN-LAST:event_sprint400mFieldFocusLost

    private void highJumpFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_highJumpFieldFocusLost
    	String highJump = highJumpField.getText();
		System.out.println("field text "+highJump);
		try {
			athlete.getDecathlonResults().setHighJump(highJump);
			highJumpWarningLabel.setText("");
		}
		catch (IllegalArgumentException e) {
			highJumpWarningLabel.setText(e.getMessage());
		}
    }//GEN-LAST:event_highJumpFieldFocusLost

    private void shotPutFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_shotPutFieldFocusLost
    	String shotPut = shotPutField.getText();
		System.out.println("field text "+shotPut);
		try {
			athlete.getDecathlonResults().setShotPut(shotPut);
			shotPutWarningLabel.setText("");
		}
		catch (IllegalArgumentException e) {
			shotPutWarningLabel.setText(e.getMessage());
		}
    }//GEN-LAST:event_shotPutFieldFocusLost

    private void longJumpFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_longJumpFieldFocusLost
    	String longJump = longJumpField.getText();
		System.out.println("field text "+longJump);
		try {
			athlete.getDecathlonResults().setLongJump(longJump);
			longJumpWarningLabel.setText("");
		}
		catch (IllegalArgumentException e) {
			longJumpWarningLabel.setText(e.getMessage());
		}
    }//GEN-LAST:event_longJumpFieldFocusLost

    private void sprint100mFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sprint100mFieldFocusLost
    	String sprint100m = sprint100mField.getText();
		System.out.println("field text "+sprint100m);
		try {
			athlete.getDecathlonResults().setSprint100m(sprint100m);
			sprint100mWarningLabel.setText("");
		}
		catch (IllegalArgumentException e) {
			sprint100mWarningLabel.setText(e.getMessage());
		}
    }//GEN-LAST:event_sprint100mFieldFocusLost

    private void countryComboFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_countryComboFocusLost
    	String country = (String)countryCombo.getSelectedItem();
		System.out.println("field text "+country);
		try {
			athlete.setCountry(country);
			countryWarningLabel.setText("");
		}
		catch (IllegalArgumentException e) {
			countryWarningLabel.setText(e.getMessage());
		}
    }//GEN-LAST:event_countryComboFocusLost

    private void birthDateFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_birthDateFieldFocusLost
    	String birthDate = birthDateField.getText();
		System.out.println("field text "+birthDate);
		try {
			athlete.setBirthTime(birthDate);
			birthDateWarningLabel.setText("");
		}
		catch (IllegalArgumentException e) {
			birthDateWarningLabel.setText(e.getMessage());
		}
    }//GEN-LAST:event_birthDateFieldFocusLost

    private void nameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameFieldFocusLost
    	String name = nameField.getText();
		System.out.println("field text "+name+"a"+athlete);
		try {
			athlete.setName(name);
			nameWarningLabel.setText("");
		}
		catch (IllegalArgumentException e) {
			nameWarningLabel.setText(e.getMessage());
		}
    }//GEN-LAST:event_nameFieldFocusLost
    
    private void formComponentShown(java.awt.event.ComponentEvent evt) {
		infoLabel.setText("");
	}
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField birthDateField;
    private javax.swing.JLabel birthDateLabel;
    private javax.swing.JLabel birthDateWarningLabel;
    private javax.swing.JComboBox countryCombo;
    private javax.swing.JLabel countryLabel;
    private javax.swing.JLabel countryWarningLabel;
    private javax.swing.JTextField discusThrowField;
    private javax.swing.JLabel discusThrowLabel;
    private javax.swing.JLabel discusThrowWarningLabel;
    private javax.swing.JTextField highJumpField;
    private javax.swing.JLabel highJumpLabel;
    private javax.swing.JLabel highJumpWarningLabel;
    private javax.swing.JTextField hurdles110mField;
    private javax.swing.JLabel hurdles110mLabel;
    private javax.swing.JLabel hurdles110mWarningLabel;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JTextField javelinThrowField;
    private javax.swing.JLabel javelinThrowLabel;
    private javax.swing.JLabel javelinThrowWarningLabel;
    private javax.swing.JTextField longJumpField;
    private javax.swing.JLabel longJumpLabel;
    private javax.swing.JLabel longJumpWarningLabel;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel nameWarningLabel;
    private javax.swing.JTextField poleVaultField;
    private javax.swing.JLabel poleVaultLabel;
    private javax.swing.JLabel poleVaultWarningLabel;
    private javax.swing.JLabel race1500mWarningLabel;
    private javax.swing.JTextField race1500mField;
    private javax.swing.JLabel race1500mLabel;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton addAthleteButton;
    private javax.swing.JTextField shotPutField;
    private javax.swing.JLabel shotPutLabel;
    private javax.swing.JLabel shotPutWarningLabel;
    private javax.swing.JTextField sprint100mField;
    private javax.swing.JLabel sprint100mLabel;
    private javax.swing.JLabel sprint100mWarningLabel;
    private javax.swing.JTextField sprint400mField;
    private javax.swing.JLabel sprint400mLabel;
    private javax.swing.JLabel sprint400mWarningLabel;
    
}
